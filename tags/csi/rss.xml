<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Csi on Daemon</title><link>https://daemon365.dev/tags/csi/</link><description>Recent content in Csi on Daemon</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Fri, 03 May 2024 00:00:00 +0800</lastBuildDate><atom:link href="https://daemon365.dev/tags/csi/rss.xml" rel="self" type="application/rss+xml"/><item><title>kubernetes 存储流程</title><link>https://daemon365.dev/post/cloud/kubernetes_storage_process/</link><pubDate>Fri, 03 May 2024 00:00:00 +0800</pubDate><guid>https://daemon365.dev/post/cloud/kubernetes_storage_process/</guid><description>&lt;h2 id="pv-与-pvc">PV 与 PVC
&lt;a class="header-anchor" href="#pv-%e4%b8%8e-pvc">&lt;/a>
&lt;/h2>&lt;p>PVC (PersistentVolumeClaim)，命名空间（namespace）级别的资源，由 用户 or StatefulSet 控制器（根据VolumeClaimTemplate） 创建。PVC 类似于 Pod，Pod 消耗 Node 资源，PVC 消耗 PV 资源。Pod 可以请求特定级别的资源（CPU 和内存），而 PVC 可以请求特定存储卷的大小及访问模式（Access Mode
PV（PersistentVolume）是集群中的一块存储资源，可以是 NFS、iSCSI、Ceph、GlusterFS 等存储卷，PV 由集群管理员创建，然后由开发者使用 PVC 来申请 PV，PVC 是对 PV 的申请，类似于 Pod 对 Node 的申请。&lt;/p></description></item></channel></rss>